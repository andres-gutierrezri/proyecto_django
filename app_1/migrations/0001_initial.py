# Generated by Django 5.2.3 on 2025-10-31 06:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario con este correo electrónico.'}, max_length=254, unique=True, verbose_name='correo electrónico')),
                ('first_name', models.CharField(max_length=150, verbose_name='nombre')),
                ('last_name', models.CharField(max_length=150, verbose_name='apellido')),
                ('email_verified', models.BooleanField(default=False, verbose_name='email verificado')),
                ('email_verification_token', models.CharField(blank=True, max_length=100, null=True, verbose_name='token de verificación')),
                ('email_verification_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='fecha de envío de verificación')),
                ('notify_on_login', models.BooleanField(default=True, verbose_name='notificar al iniciar sesión')),
                ('last_login_notification', models.DateTimeField(blank=True, null=True, verbose_name='última notificación de login')),
                ('password_reset_token', models.CharField(blank=True, max_length=100, null=True, verbose_name='token de restablecimiento de contraseña')),
                ('password_reset_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='fecha de envío de restablecimiento')),
                ('terms_accepted', models.BooleanField(default=False, verbose_name='términos aceptados')),
                ('newsletter_subscription', models.BooleanField(default=False, verbose_name='suscripción al boletín')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True, verbose_name='clave de sesión')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='última actividad')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_sessions', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
            options={
                'verbose_name': 'sesión de usuario',
                'verbose_name_plural': 'sesiones de usuario',
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['user', 'session_key'], name='app_1_users_user_id_1f0a35_idx'), models.Index(fields=['session_key'], name='app_1_users_session_cc08d6_idx')],
            },
        ),
    ]
